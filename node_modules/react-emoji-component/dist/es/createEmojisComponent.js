import _extends from '@babel/runtime/helpers/extends'
import React from 'react'
import PropTypes from 'prop-types'
import emptyObj from 'empty/object'
import walk from './walk'
import {toEmojis} from './utils'
export default (options = emptyObj) => {
  let publicPath = options.publicPath

  if (publicPath !== void 0 && publicPath !== null) {
    options.publicPath =
      publicPath.endsWith('/') === false ? publicPath + '/' : publicPath
  }

  function Emojis(props) {
    props = _extends({}, props)
    const children = props.children
    delete props.children

    if (options !== emptyObj) {
      _extends(props, options)
    }

    return React.Children.count(children)
      ? walk(children, toEmojis, props)
      : null
  }

  if (process.env.NODE_ENV !== 'production') {
    Emojis.propTypes =
      /* remove-proptypes*/
      {
        size: PropTypes.number,
        hiDpi: PropTypes.bool,
        publicPath: PropTypes.string,
        extension: PropTypes.string,
        render: PropTypes.func,
      }
  }

  return Emojis
}
